<<dd_version: 2>>

<head>
<meta charset="UTF-8">
<link rel="stylesheet" type="text/css" href="stmarkdown.css">
</head>

<<dd_do: quietly>>
version 15
set linesize 80

capture quietly ssc describe g538schemes
if _rc {
	local has_g538 0
}
else {
	local has_g538 1
}
<</dd_do>>

# A fuel consumption study of Stata's auto dataset

We conduct a study of the fuel consumption of cars in Stata's auto dataset. 

~~~~
<<dd_do>>
sysuse auto, clear
<</dd_do>>
~~~~

## Perform data transformation

We generate a variable, **fuel**, that measures the fuel consumption rate in the unit of 
Gallons per 100 Miles.  

~~~~
<<dd_do>>
generate fuel = 100/mpg
label variable fuel "Fuel consumption (Gallons per 100 Miles)"
<</dd_do>>
~~~~

Gallons per 100 Mile is a better measurement than Miles per Gallon. Going 
from a 10 Miles per Gallon car to a 20 Miles per Gallon 
car saves 5 Gallons per 100 Miles when Miles per Gallon increases 10. Going 
from a 20 Miles per Gallon car to a 40 Miles per Gallon car *only* saves 2.5 Gallons 
per 100 Miles when Miles per Gallon increases 20.      

## Examine the variables

We examine variables for possible errors in the data.

~~~~
<<dd_do>>
describe fuel weight
<</dd_do>>
~~~~

<<dd_do:quietly>>
assert fuel > 0 
<</dd_do>>

~~~~
<<dd_do>>
summarize weight
<</dd_do>>
~~~~

The variable **weight** has minimum value <<dd_display: %4.2f `r(min)'>>, maximum value 
<<dd_display: %4.2f `r(max)'>>, and range <<dd_display: %4.2f `r(max)'-`r(min)'>>.

##  Plot fuel consumption and vehicle weight 

<<dd_if:`has_g538'>>
The graph is produced with  Daniel Bischof's *538* scheme. 

~~~~
<<dd_do>>
twoway lfitci fuel weight || scatter fuel weight, mcolor(%20) scheme(538)
<</dd_do>>
~~~~
<<dd_else>>
The graph is produced with default *s2color* scheme. 

~~~~
<<dd_do>>
twoway lfitci fuel weight || scatter fuel weight, mcolor(%20) scheme(s2color)
<</dd_do>>
~~~~
<<dd_endif>>


<<dd_graph: sav("sc_gp100m_mpg.png") alt("scatter fuel weight") replace markdown>>

## Explore relationship between fuel consumption and vehicle weight - linear regression

~~~~
<<dd_do>>
regress fuel weight
<</dd_do>>
~~~~

<<dd_do:quietly>>
matrix define eb = e(b)
<</dd_do>>

The regression shows that for every unit increase in weight, a 
<<dd_display:%9.4f eb[1,1]>> unit increase in fuel consumption is predicted.

## Produce an HTML table from regression results

<<dd_do>>
_coef_table, markdown
<</dd_do>>

## Produce a table from **estimates table**

~~~~
<<dd_do>>
quietly regress fuel weight gear turn
estimates store model1
quietly regress fuel weight gear turn foreign
estimates store model2
<</dd_do>>
~~~~

<<dd_do>>
estimates table model1 model2, varlabel b(%7.4f) stats(N r2_a) star markdown
<</dd_do>>

## References 

1. [Convert dynamic Markdown documents to Word or HTML](https://www.stata.com/features/overview/markdown/)
2. [dyndoc manual](https://www.stata.com/manuals/rptdyndoc.pdf)
3. [dynamic tags manual (Stata 16)](https://www.stata.com/manuals/rptdynamictags.pdf#rptDynamictags)
5. [scheme 538](https://danbischof.com/2017/09/05/a-final-stata-gift-538-schemes/)  
4. [markdown reference](https://daringfireball.net/projects/markdown/syntax)
